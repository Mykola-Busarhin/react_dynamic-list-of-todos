{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","types/Filter.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","currentTodo","setCurrentTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","onSearchWordChange","onFilterChange","searchWord","onChange","event","target","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","FilteredBy","TodoModal","closeModal","useState","user","setUser","useEffect","userId","href","email","name","App","todoList","setTodoList","setSearchWord","filterOption","setFilterOption","filteredTodos","useMemo","filter","ALL","includes","ACTIVE","COMPLETED","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b361cd85.chunk.js","sourcesContent":["import { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  currentTodo: Todo | null;\n  setCurrentTodo: (todo: Todo | null) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  currentTodo,\n  setCurrentTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => {\n          const { id, completed, title } = todo;\n\n          return (\n            <tr data-cy=\"todo\" className=\"\" key={id}>\n              <td className=\"is-vcentered\">\n                {id}\n              </td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={completed\n                  ? 'has-text-success' : 'has-text-danger'}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                {currentTodo?.id === id ? (\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button is-link\"\n                    type=\"button\"\n                    onClick={() => {\n                      setCurrentTodo(currentTodo);\n                    }}\n                  >\n                    <span className=\"icon\">\n                      <i className=\"far fa-eye\" />\n                    </span>\n                  </button>\n                ) : (\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => {\n                      setCurrentTodo(todo);\n                    }}\n                  >\n                    <span className=\"icon\">\n                      <i className=\"far fa-eye\" />\n                    </span>\n                  </button>\n                )}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","type Props = {\n  onSearchWordChange: (word: string) => void;\n  onFilterChange: (filterOption: string) => void;\n  searchWord: string;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  onSearchWordChange,\n  onFilterChange,\n  searchWord,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => onFilterChange(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchWord}\n          onChange={(event) => onSearchWordChange(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n        {searchWord && (\n          <span\n            className=\"icon is-right\"\n            style={{ pointerEvents: 'all' }}\n            id=\"button-label\"\n          >\n            <button\n              data-cy=\"clearSearchButton\"\n              aria-labelledby=\"button-label\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => onSearchWordChange('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum FilteredBy {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n\n}\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n  closeModal: (todo: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, closeModal }) => {\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    getUser(todo.userId).then(setUser);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {todo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                closeModal(null);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect, useMemo } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { FilteredBy } from './types/Filter';\n\nexport const App: React.FC = () => {\n  const [todoList, setTodoList] = useState<Todo[]>([]);\n  const [searchWord, setSearchWord] = useState('');\n  const [filterOption, setFilterOption] = useState('all');\n  const [currentTodo, setCurrentTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    getTodos().then(setTodoList);\n  }, []);\n\n  const filteredTodos = useMemo(() => {\n    return todoList.filter(todo => {\n      switch (filterOption) {\n        case FilteredBy.ALL:\n          return todo.title.includes(searchWord);\n        case FilteredBy.ACTIVE:\n          return !todo.completed && todo.title.includes(searchWord);\n          break;\n        case FilteredBy.COMPLETED:\n          return todo.completed && todo.title.includes(searchWord);\n          break;\n        default:\n          return true;\n      }\n    });\n  }, [filterOption, searchWord, todoList]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onSearchWordChange={setSearchWord}\n                onFilterChange={setFilterOption}\n                searchWord={searchWord}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todoList.length\n                ? (<Loader />) : (\n                  <TodoList\n                    todos={filteredTodos}\n                    currentTodo={currentTodo}\n                    setCurrentTodo={setCurrentTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {currentTodo && (\n        <TodoModal\n          todo={currentTodo}\n          closeModal={setCurrentTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}